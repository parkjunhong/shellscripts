#!/usr/bin/env bash

# =======================================
# @auther : jhpark@ymtech.kr
# @title  : DSMS shell scripts for controller.
# @since  : 2021/04/05
# =======================================

__fileNAME="$0"

help(){
	if [ ! -z "$1" ];
	then
		local indent=10
		local formatl=" - %-"$indent"s: %s\n"
		local formatr=" - %"$indent"s: %s\n"
		echo
		echo "================================================================================"
		printf "$formatl" "filename" "$__fileNAME"
		printf "$formatl" "line" "$2"
		printf "$formatl" "callstacks"
		local idx=1
		for func in ${FUNCNAME[@]:1}
		do
			printf "$formatr" "["$idx"]" $func
			((idx++))
		done
		printf "$formatl" "cause" "$1"
		echo "================================================================================"
	fi
	echo
	echo "Usage:"
	echo "dsms-ctrl --service <service> --job <job> --target <target> --file <file> --date <date> --dhcpsvrs <dhcp ip list>"
	echo
	echo "Options:"
	echo " --service : [tossiu]"
	echo " --job     : [insert|delete]"
	echo " --target  : [db|file], --service == 'tossiu'인 경우 해당. "
	echo " --file    : file path. --service == 'tossiu'인 경우 해당."
	echo " --date    : date. format: year{4}month{2}day{2}hour{2}minute{2}second{2}"
	echo " --dhcpsvrs: DHCP 서버 IP 목록. 콤마(,)로 구분하여 여러개 입력"
	echo
	echo "e.g."
	echo " - insert from db  : dsms-ctrl.sh --service tossiu --job insert --target db"
	echo " - insert from file: dsms-ctrl.sh --service tossiu --job insert --target file --file ./dhcp-1.txt --date 202010406000000"
	echo " - delete by dhcp  : dsms-ctrl.sh --service tossiu --job delete --dhcpsvrs 192.168.0.1,192.168.0.2"
}

curfuncname(){
	echo ${FUNCNAME[1]}
}

ARGS=()
fn-args(){
	ARGS+=("$1")
}

SERVICE=""
while [ ! -z "$1" ];
do
	fn-args "$1"
	case "$1" in
		--service)
			shift
			fn-args "$1"
			SERVICE="$1"
			;;
		--help)
			help
			exit 0
			;;
		*)
			;;
	esac
	shift
done 


ex(){
	help "oops..: $1" $LINENO
}

# toss-iu 모듈 명령을 처리한다.
# @param $1... {any}  toss-iu 실행을 위한 파라미터.
handle-tossiu(){
	local _job=""
	local _target=""
	local _file=""
	local _date=""
	local _dhcpsvrs=""
	
	while [ ! -z "$1" ];
	do
		case "$1" in
			--date)
				shift
				_date="$1"
				;;
			--file)
				shift
				_file="$1"
				;;
			-h | --help)
				help
				exit 0
				;;
			--job)
				shift
				_job="$1"
				;;
			--target)
				shift
				_target="$1"
				;;
			--dhcpsvrs)
				shift
				_dhcpsvrs="$1"
				;;
			*)
				;;
		esac
		shift
	done

	case "$_job" in
		insert)
			case "$_target" in
				db)
					echo "${install.dir}/start.sh --job insert --target db"
					${install.dir}/start.sh --job insert --target db
					;;
				file)
					# check a filepath.
					if [ ! -f "$_file" ];then
						help "[ERROR] Invalid filepath: '$_file'"
						exit 1
					fi

					# check whether a path is absolute or relative.
					if ! [[ $_file == /* ]];then
						_file="$(pwd)/$_file"
					fi

					# check a date format.
					if ! [[ "$_date" =~ ^[0-9]{14}$ ]];then
						help "[ERROR] Invalid date: '$_date', required-format: 'year{4}month{2}day{2}hour{2}minute{2}second{2}'"
						exit 1
					fi
					echo "${install.dir}/start.sh --job insert --target file --file $_file --date $_date"
					${install.dir}/start.sh --job insert --target file --file $_file --date $_date
					;;
				*)
					help "[ERROR] Unsupported target: '$_target', job: $_job"
					exit 1
					;;
			esac
			;;
		delete)
			if [ -z "$_dhcpsvrs" ];then
				help "[ERROR] Invalid DHCP IPv4 addresses: '$_dhcpsvrs'"
				exit 1
			fi

			# check IPv4 addresses
			IFS="," read -a _iparr <<< "$_dhcpsvrs"
			for _ip in ${_iparr[@]}
			do
				if ! [[ $_ip =~ ^(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])(\.(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])){3}$ ]];then
					help "[ERROR] Invalid IPv4 address: $_ip, dhcpsvrs: $_dhcpsvrs"
					exit 1
				fi
			done
			echo "${install.dir}/start.sh --job delete --dhcpsvrs $_dhcpsvrs"
			${install.dir}/start.sh --job delete --dhcpsvrs $_dhcpsvrs
			;;
		*)
			help "[ERROR] Unsupported job: $_job"
			exit 1
			;;
	esac
	
	local _fmt="%-8s: %s\n"
	printf "$_fmt" "job" $_job
	printf "$_fmt" "target" $_target
	printf "$_fmt" "file" $_file
	printf "$_fmt" "date" $_date
	printf "$_fmt" "dhcpsvrs" $_dhcpsvrs
}

case "$SERVICE" in
	tossiu)
		handle-tossiu ${ARGS[@]}
		;;
	*)
		help  "Unsupported service type: $SERVICE" $LINENO
		exit 1
		;;
esac


