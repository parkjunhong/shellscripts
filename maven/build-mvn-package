#!/usr/bin/env bash

# =======================================
# @auther : parkjunhong77@gmail.com
# @title  : build maven projects with user-custom 'profile' for build.
# @license: Apache License 2.0
# @since  : 2020-12-21
# @desc   : support macOS 11.2.3, Ubuntu 18.04, CentOS 7
# @completion: build-mvn-package_completion
#            1. insert 'source <path>/build-mvn-packet_completion" into ~/bin/.bashrc or ~/bin/.bash_profile for a personal usage.
#            2. copy the above file to /etc/bash_completion.d/ for all users.
# =======================================


help(){
	if [ ! -z "$1" ];
	then
		local indent=10
		local formatl=" - %-"$indent"s: %s\n"
		local formatr=" - %"$indent"s: %s\n"
		echo
		echo "================================================================================"
		printf "$formatl" "filename" "$FILENAME"
		printf "$formatl" "line" "$2"
		printf "$formatl" "callstack"
		local idx=1
		for func in ${FUNCNAME[@]:1}
		do
			printf "$formatr" "["$idx"]" $func
			((idx++))
		done
		printf "$formatl" "cause" "$1"
		echo "================================================================================"
	fi
	echo
	echo "Usage:"
	echo "./build-mvn-package [-h|--help] [-d|--deploy] -p <profile> [-t|--test] [-u|--update] [-x|--debug] [-o | --offline]"
	echo
	echo "Options:"
	echo " -d | --deploy: deploy after build."
	echo " -h | --help: show help messages."
	echo " -o | --offline: build with offline dependencies."
	echo " -p | --profile: Profile"
	echo " -t | --test: run Junit TestCase"
	echo " -u | --update: 'git pull' before build sources."
	echo " -x | --debug: enable maven 'debug' mode"
}

PROFILE=""
DEPLOY=0
TEST="true"
GIT_PULL="false"
DEBUG=""
OFFLINE=""

while [ ! -z "$1" ];
do
	case "$1" in
		-d | --deploy)
			DEPLOY=1
			;;
		-h | --help)
			help
			exit 0
			;;
		-o | --offline)
			OFFLINE="-o"
			;;
		-p | --profile)
			shift
			PROFILE=$1
			;;
		-t | --test)
			TEST="false"
			;;
		-u | --update)
			GIT_PULL="true"
			;;
		-x | --debug)
			DEBUG="-X"
			;;
		*)
			;;
	esac
	shift
done

if [ -z $PROFILE ];
then
	help "Please, input a PROFILE"
	exit 1
fi


JAVA_HOME=$(update-java-home.sh 2>/dev/null)

echo
echo " ################################################"
if [ -n "$JAVA_HOME" ]; then
  export JAVA_HOME
  echo " JAVA_HOME  = $JAVA_HOME"
else
  echo
  echo " !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  echo " ⚠️  update-java-home.sh 실행 실패 또는 JAVA_HOME이 비어 있습니다."
  echo "     기본 JDK 설정을 사용하거나, JAVA_HOME을 수동으로 설정해주세요."
  echo " !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
fi

echo " MAVEN_HOME = $M2_HOME"
echo " ################################################"

if [ "${GIT_PULL}" == "true" ];
then
	echo
	echo "git pull"
	git pull
fi

CMD="mvn $OFFLINE clean package $DEBUG -Dmaven.test.skip=${TEST} -Dbuild.profile=$PROFILE -U -up"
echo
echo " > $CMD"
eval $CMD

if [ $DEPLOY -ne 1 ];
then
	exit 0
fi

echo
pushd .
echo " > cd ./deploy/$PROFILE"
cd ./deploy/$PROFILE
echo " > ./deploy.sh"
./deploy.sh
popd

exit 0
